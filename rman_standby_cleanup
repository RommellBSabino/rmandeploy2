#!/bin/sh
#Dataguard rman cleanup script. Once run, it will cleanup the applied archived logs on any physical database inside the server. 
#This is an update to the old cleanup script which is manual.
#The wget command below will download the script. Just add execute permission.
# /usr/bin/wget -nv -nd -np -r -l1 -A"standby_cleanup.sh" -N http://depot:8080/export/scripts/DBA/archlogs
#Set execute permission
#chmod +x standby_cleanup.sh
#Crontab entry:
#0 4 * * * /home/oracle/rman/standby_cleanup.sh >> /home/oracle/rman/standby_cleanup.log 


rman_dir=/home/oracle/rman
rcv_file=delete_arc.rcv
DB_NAME_ORATAB=$(grep -vE '^\#|^\*|^$|ASM' /etc/oratab | awk -F":" '{print $1 " " $2}')
ORAENV_ASK=NO

del_arc_rcv="CONFIGURE ARCHIVELOG DELETION POLICY TO APPLIED ON STANDBY;
run{
DELETE NOPROMPT ARCHIVELOG until time 'sysdate - 4/24';
}
EXIT"

connect_to_sql () {
SQL_OUTPUT=$( $ORACLE_HOME/bin/sqlplus -s / as sysdba<< OCI
set heading off
$1
exit
OCI
)
echo "$SQL_OUTPUT"| grep -v \^$
}

remove_dg () {
if [[ "$1" == *"_dg" ]]; then
 OUTPUT=`echo $1| cut -d"_" -f1`
else
 OUTPUT="$1"
fi
echo $OUTPUT
}

#MAIN

mkdir -p $rman_dir
echo "$del_arc_rcv" > $rman_dir/$rcv_file
echo "$DB_NAME_ORATAB"| while read line
do
 ORACLE_SID=$(echo $line| awk '{print $1}')
 ORACLE_HOME=$(echo $line| awk '{print $2}')
 export ORACLE_SID
 export ORACLE_HOME
 . oraenv > /dev/null 2>&1
 echo "Clean up job for $ORACLE_SID will start: `date`"
 inst_name=$(remove_dg $line)
 echo "$line - found in Oratab"
 echo $inst_name - Instance Name
 if [ $(ps -ef | grep pmon|grep "$inst_name"| cut -d"_" -f3,4|grep -vE 'oracle|ASM') ]; then
  ORACLE_SID=$(ps -ef | grep pmon|grep "$inst_name"| cut -d"_" -f3,4|grep -vE 'oracle|ASM')
  export ORACLE_SID
  echo "DB INSTANCE process: " $ORACLE_SID
  DB_NAME=$(connect_to_sql "select name from v\$database;")
  if [ "$(connect_to_sql "select database_role from v\$database;")" = "PHYSICAL STANDBY" ]; then
   echo "$DB_NAME is a Standby, continue"
   export NLS_DATE_FORMAT="dd-month-yyyy hh:mi:ss am"
   $ORACLE_HOME/bin/rman target / cmdfile=$rman_dir/$rcv_file log=$rman_dir/rman_deletearc_$ORACLE_SID.log append 
  else
   echo "$DB_NAME is not a standy DB. Aborting"
  fi
 else
  echo "$inst_name has no running process. Please check if DB is up."
 fi
 echo "Clean up job for $ORACLE_SID will completed: `date`"
done

#03/23/2016 - Rommell -- First Version.
#03/25/2016 - Rommell -- Added export ORACLE_SID to the script since crontab does not initialize default profile making the script fail when ran from crontab.
